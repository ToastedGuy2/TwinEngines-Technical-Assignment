// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Repositories.context;

namespace Repositories.Migrations
{
    [DbContext(typeof(TwinEnginesDbContext))]
    [Migration("20211220035321_secondMigration")]
    partial class secondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("server.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractDate = new DateTime(2021, 12, 19, 21, 53, 20, 671, DateTimeKind.Local).AddTicks(2836),
                            CreditLimit = 1549m,
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Roberto Solorzano",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            ContractDate = new DateTime(2021, 12, 19, 21, 53, 20, 675, DateTimeKind.Local).AddTicks(3172),
                            CreditLimit = 1184m,
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Kevin Jose Ordoñez Zelaya",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            ContractDate = new DateTime(2021, 12, 19, 21, 53, 20, 675, DateTimeKind.Local).AddTicks(3194),
                            CreditLimit = 2340m,
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Daniel Webb",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            ContractDate = new DateTime(2021, 12, 19, 21, 53, 20, 675, DateTimeKind.Local).AddTicks(3198),
                            CreditLimit = 863m,
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Javier Delgado",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            ContractDate = new DateTime(2021, 12, 19, 21, 53, 20, 675, DateTimeKind.Local).AddTicks(3201),
                            CreditLimit = 670m,
                            DeletedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Dummy Data",
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("server.Entities.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Prospecto"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cliente"
                        });
                });

            modelBuilder.Entity("server.Entities.Customer", b =>
                {
                    b.HasOne("server.Entities.CustomerType", "Type")
                        .WithMany("Customers")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("server.Entities.CustomerType", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
